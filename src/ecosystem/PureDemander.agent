<?xml version="1.0" encoding="UTF-8"?>
<agent version="1" agentcomment="This is an agent." agentclassname="PureDemander" agentparentclassname="" agentinterfaces="" agentimports="">
  <behaviorsteps>
    <behaviorstep x="274" y="42" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="0" watchannotationtriggerdelta="0" watchannotationtriggerpriority="" watchannotationpick="" comment="Generate Need" visibility="0" returntype="void" compiledname="GenerateOrder" parameters=" " exceptions="">
      <label x="274" y="27" text="Generate Order"/>
    </behaviorstep>
    <behaviorstep x="320" y="625" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="1" watchannotationtriggerdelta="1" watchannotationtriggerpriority="" watchannotationpick="" comment="Read data from file" visibility="0" returntype="def" compiledname="ReadData" parameters="String orderID" exceptions="">
      <label x="320" y="610" text="Read Data"/>
    </behaviorstep>
  </behaviorsteps>
  <tasksteps>
    <taskstep x="270" y="292" comment="have need is to generate order" command1="Object agent = CreateAgent(&quot;Ecosystem&quot;, &quot;ecosystem.Order&quot;)" command2="//println this.taskMap" command3="Order o = (Order) agent" command4="o.addOwner(this)" command5="o.setType(this.toString())">
      <label x="270" y="277" text="Generate Order"/>
    </taskstep>
    <taskstep x="271" y="383" comment="Set the order parameters" command1="o.setParameters(this.taskMap)" command2="println this.toString() + &quot; need &quot;+ o.toString()" command3="this.getOrderList().add(o)" command4="this.setNewOrder(o)" command5="this.setNeed(true)">
      <label x="271" y="368" text="Set parameters"/>
    </taskstep>
    <taskstep x="549" y="868" comment="This is a task." command1="int amount = sc.nextInt()" command2="" command3="" command4="" command5="">
      <label x="549" y="853" text="Do Task"/>
    </taskstep>
    <taskstep x="678" y="948" comment="This is a task." command1="sc.nextInt()" command2="" command3="" command4="" command5="">
      <label x="678" y="933" text="Do Task"/>
    </taskstep>
    <taskstep x="442" y="785" comment="This is a task." command1="def templist = [:]" command2="" command3="templist &lt;&lt; [p:sc.nextInt()]" command4="" command5="">
      <label x="442" y="770" text="Do Task"/>
    </taskstep>
    <taskstep x="697" y="866" comment="This is a task." command1="templist &lt;&lt; [(j):amount]" command2="" command3="" command4="" command5="">
      <label x="697" y="851" text="Do Task"/>
    </taskstep>
    <taskstep x="321" y="877" comment="This is a task." command1="" command2="" command3="" command4="" command5="">
      <label x="321" y="862" text="Do Task"/>
    </taskstep>
    <taskstep x="441" y="952" comment="This is a task." command1="this.taskMap &lt;&lt; [(i): templist]" command2="int nSuccessor = sc.nextInt()" command3="" command4="" command5="">
      <label x="441" y="937" text="Do Task"/>
    </taskstep>
    <taskstep x="319" y="699" comment="This is a task." command1="Scanner sc = new Scanner(new File(&quot;cases/Order&quot;+orderID+&quot;.rcp&quot;))" command2="int nTasks = sc.nextInt()" command3="int nServices = sc.nextInt()" command4="sc.nextLine()" command5="sc.nextLine()">
      <label x="319" y="684" text="Do Task"/>
    </taskstep>
    <taskstep x="599" y="207" comment="This is a task." command1="" command2="" command3="" command4="" command5="">
      <label x="599" y="192" text="Do Task"/>
    </taskstep>
    <taskstep x="398" y="126" comment="This is a task." command1="Parameters params = RunEnvironment.getInstance().getParameters()" command2="double mean = params.getValue(&quot;Mean&quot;)" command3="RandomHelper.init()" command4="RandomHelper.createPoisson(mean)" command5="">
      <label x="398" y="111" text="Randomize"/>
    </taskstep>
  </tasksteps>
  <decisionsteps>
    <decisionstep x="438" y="866" comment="This is a loop." criteria="int j in 1..nServices" branchType="while">
      <label x="438" y="851" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="628" y="869" comment="This is an agent decision." criteria="amount &gt; 0" branchType="if">
      <label x="628" y="854" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="320" y="786" comment="This is a loop." criteria="int i in 1..nTasks" branchType="while">
      <label x="320" y="771" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="556" y="948" comment="This is a loop." criteria="int s in 0..&lt;nSuccessor" branchType="while">
      <label x="556" y="933" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="396" y="202" comment="This is a loop." criteria="int i in RandomHelper.getPoisson().nextInt()" branchType="while">
      <label x="396" y="187" text="Evaluate Criteria"/>
    </decisionstep>
  </decisionsteps>
  <joinsteps/>
  <agentproperties>
    <agentproperty x="82" y="80" comment="Order List" visibility="0" compiledname="orderList" type="ArrayList" defaultvalue="new ArrayList()">
      <label x="87" y="65" text="Order List"/>
    </agentproperty>
    <agentproperty x="159" y="79" comment="New order" visibility="0" compiledname="newOrder" type="Order" defaultvalue="null">
      <label x="164" y="64" text="New order"/>
    </agentproperty>
    <agentproperty x="140" y="202" comment="The index of need generated" visibility="0" compiledname="need" type="boolean" defaultvalue="false">
      <label x="145" y="187" text="Need"/>
    </agentproperty>
    <agentproperty x="474" y="613" comment="Task data read from file" visibility="0" compiledname="taskMap" type="def" defaultvalue="[:]">
      <label x="479" y="598" text="Task Map"/>
    </agentproperty>
    <agentproperty x="535" y="66" comment="Mark the difficulty level of the order type" visibility="0" compiledname="level" type="def" defaultvalue="[:]">
      <label x="540" y="51" text="Level"/>
    </agentproperty>
    <agentproperty x="47" y="236" comment="This is an agent property." visibility="0" compiledname="hardness" type="double" defaultvalue="0">
      <label x="52" y="221" text="Hardness"/>
    </agentproperty>
  </agentproperties>
  <endsteps>
    <endstep x="344" y="1014"/>
    <endstep x="538" y="243"/>
    <endstep x="278" y="470"/>
  </endsteps>
  <connections>
    <transitions>
      <transition>
        <transitionsource type="behavior" index="0" anchor="0"/>
        <transitiontarget type="task" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="behavior" index="1" anchor="0"/>
        <transitiontarget type="task" index="8" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="0" anchor="2"/>
        <transitiontarget type="task" index="1" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="1" anchor="2"/>
        <transitiontarget type="end" index="2" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="2" anchor="3"/>
        <transitiontarget type="decision" index="1" anchor="1"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="4" anchor="2"/>
        <transitiontarget type="decision" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="6" anchor="2"/>
        <transitiontarget type="end" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="7" anchor="3"/>
        <transitiontarget type="decision" index="3" anchor="1"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="8" anchor="2"/>
        <transitiontarget type="decision" index="2" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="10" anchor="2"/>
        <transitiontarget type="decision" index="4" anchor="0"/>
        <bendpoints/>
      </transition>
    </transitions>
    <booleantransitions>
      <booleantransition value="true">
        <transitionsource type="decision" index="0" anchor="3"/>
        <transitiontarget type="task" index="2" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="0" anchor="2"/>
        <transitiontarget type="task" index="7" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="1" anchor="3"/>
        <transitiontarget type="task" index="5" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="2" anchor="3"/>
        <transitiontarget type="task" index="4" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="2" anchor="2"/>
        <transitiontarget type="task" index="6" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="3" anchor="3"/>
        <transitiontarget type="task" index="3" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="4" anchor="3"/>
        <transitiontarget type="end" index="1" anchor="0"/>
        <bendpoints/>
      </booleantransition>
    </booleantransitions>
  </connections>
</agent>