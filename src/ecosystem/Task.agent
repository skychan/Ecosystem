<?xml version="1.0" encoding="UTF-8"?>
<agent version="1" agentcomment="This is an agent." agentclassname="Task" agentparentclassname="ecosystem.Job" agentinterfaces="" agentimports="">
  <behaviorsteps>
    <behaviorstep x="41" y="87" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="1" watchannotationtriggerdelta="1" watchannotationtriggerpriority="" watchannotationpick="" comment="This is the step behavior." visibility="0" returntype="" compiledname="Task" parameters="" exceptions="">
      <label x="41" y="72" text="Constructor"/>
    </behaviorstep>
    <behaviorstep x="273" y="124" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="1" watchannotationtriggerdelta="1" watchannotationtriggerpriority="" watchannotationpick="" comment="This is the step behavior." visibility="0" returntype="void" compiledname="setParameters" parameters="tdata" exceptions="">
      <label x="273" y="109" text="Set Values"/>
    </behaviorstep>
    <behaviorstep x="602" y="91" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="ecosystem.Task" watchannotationtargetfieldnames="remainingTime" watchannotationtriggercondition="$watchee.equals($watcher)" watchannotationtriggerschedule="1" watchannotationtriggerdelta="1" watchannotationtriggerpriority="" watchannotationpick="" comment="Process the task" visibility="0" returntype="def" compiledname="Process" parameters="ecosystem.Task watchedAgent" exceptions="">
      <label x="602" y="76" text="Process"/>
    </behaviorstep>
    <behaviorstep x="47" y="617" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="1" watchannotationtriggerdelta="1" watchannotationtriggerpriority="" watchannotationpick="" comment="Set the owner is add to the owner list" visibility="0" returntype="void" compiledname="addOwner" parameters="user,p" exceptions="">
      <label x="47" y="602" text="Add Owner"/>
    </behaviorstep>
    <behaviorstep x="399" y="547" scheduleannotationstart="0.3" scheduleannotationpick="" scheduleannotationinterval="1" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="1" watchannotationtriggerdelta="0.9" watchannotationtriggerpriority="" watchannotationpick="" comment="Check if all the candidates are ready" visibility="0" returntype="" compiledname="CheckStatus" parameters="" exceptions="">
      <label x="399" y="532" text="Check Status"/>
    </behaviorstep>
  </behaviorsteps>
  <tasksteps>
    <taskstep x="43" y="187" comment="This is a task." command1="selectBehavior = new SelectInTask()" command2="processBehavior = new ProcessInTask()" command3="" command4="" command5="">
      <label x="43" y="172" text="Do Task"/>
    </taskstep>
    <taskstep x="273" y="313" comment="This is a task." command1="" command2="this.setStartTime(GetTickCount())" command3="" command4="" command5="">
      <label x="273" y="298" text="Do Task"/>
    </taskstep>
    <taskstep x="380" y="127" comment="This is a task." command1="this.setProcessingTime(data.value)" command2="this.addOwner(this.getMaster().getOwner(),data.value)" command3="this.setRemainingTime(data.value)" command4="" command5="">
      <label x="380" y="112" text="Do Task"/>
    </taskstep>
    <taskstep x="382" y="330" comment="This is a task." command1="this.needResourceCapacity &lt;&lt; data" command2="" command3="// this.prepareStatus[data.key] = false" command4="this.candidates[data.key] = []" command5="">
      <label x="382" y="315" text="Do Task"/>
    </taskstep>
    <taskstep x="603" y="251" comment="This is a task." command1="this.setRemainingTime(this.getRemainingTime()-1)" command2="" command3="" command4="" command5="">
      <label x="603" y="236" text="Do Task"/>
    </taskstep>
    <taskstep x="710" y="419" comment="The finish step" command1="mac.Release(this)" command2="" command3="" command4="" command5="">
      <label x="710" y="404" text="Afterward"/>
    </taskstep>
    <taskstep x="709" y="500" comment="This is a task." command1="this.setProductQuality(tempQuality)" command2="" command3="" command4="" command5="">
      <label x="709" y="485" text="Set product quality"/>
    </taskstep>
    <taskstep x="815" y="419" comment="This is a task." command1="RandomHelper.createNormal(mac.getQuality(),1)" command2="double tempQuality = RandomHelper.getNormal().nextDouble()" command3="" command4="" command5="">
      <label x="815" y="404" text="Do Task"/>
    </taskstep>
    <taskstep x="813" y="241" comment="This is a task." command1="" command2="this.setFinish(true)" command3="this.finishTime = GetTickCount()" command4="this.span = (int)(this.finishTime - this.getStartTime())" command5="">
      <label x="813" y="226" text="Finish"/>
    </taskstep>
    <taskstep x="931" y="336" comment="This is a task." command1="mac.Review(this)" command2="this.Review(mac)" command3="" command4="" command5="">
      <label x="931" y="321" text="Review"/>
    </taskstep>
    <taskstep x="47" y="713" comment="add owner to the list" command1="this.owner[user] = p" command2="" command3="" command4="" command5="">
      <label x="47" y="698" text="set owner"/>
    </taskstep>
    <taskstep x="401" y="729" comment="This is a task." command1="this.processBehavior.Process(this)" command2="this.prepareStatus = [:]" command3="" command4="" command5="">
      <label x="401" y="714" text="Do Task"/>
    </taskstep>
    <taskstep x="564" y="748" comment="This is a task." command1="println job" command2="println job.prepareStatus" command3="println &quot; need = &quot; + job.needResourceCapacity[mac.getType()]" command4="" command5="">
      <label x="564" y="733" text="Do Task"/>
    </taskstep>
    <taskstep x="670" y="658" comment="This is a task." command1="println &quot; buffer &quot;" command2="" command3="" command4="" command5="">
      <label x="670" y="643" text="Do Task"/>
    </taskstep>
    <taskstep x="763" y="745" comment="This is a task." command1="println job" command2="println job.prepareStatus" command3="println &quot; need = &quot; + job.needResourceCapacity[mac.getType()]" command4="" command5="">
      <label x="763" y="730" text="Do Task"/>
    </taskstep>
    <taskstep x="559" y="576" comment="This is a task." command1="if(mac.getClass() == ecosystem.Resource){\f&#x9;println &quot; sourceable = &quot; + mac.sourceable\f&#x9;println &quot; available = &quot;+ mac.available\f}" command2="" command3="" command4="" command5="">
      <label x="559" y="561" text="Do Task"/>
    </taskstep>
    <taskstep x="556" y="475" comment="The finish step" command1="" command2="println mac" command3="println &quot;jobList&quot;" command4="" command5="">
      <label x="556" y="460" text="Afterward"/>
    </taskstep>
  </tasksteps>
  <decisionsteps>
    <decisionstep x="274" y="220" comment="This is a loop." criteria="data in tdata.value" branchType="while">
      <label x="274" y="205" text="loop"/>
    </decisionstep>
    <decisionstep x="374" y="219" comment="This is an agent decision." criteria="data.key == &quot;p&quot;" branchType="if">
      <label x="374" y="204" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="601" y="159" comment="This is an agent decision." criteria="this.getRemainingTime() &gt; 0 &amp;&amp; !this.pause" branchType="if">
      <label x="601" y="144" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="603" y="328" comment="This is an agent decision." criteria="this.getRemainingTime() == 0" branchType="if">
      <label x="603" y="313" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="705" y="331" comment="This is a loop." criteria="mac in this.getAllocation().values()" branchType="while">
      <label x="705" y="316" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="820" y="499" comment="This is an agent decision." criteria="tempQuality &lt; this.getProductQuality()" branchType="if">
      <label x="820" y="484" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="823" y="336" comment="This is a loop." criteria="mac in this.getAllocation().values()" branchType="while">
      <label x="823" y="321" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="400" y="632" comment="This is an agent decision." criteria="this.getPrepareStatus().values().count(false) == 0 &amp;&amp; this.getPrepareStatus().size()&gt;0" branchType="if">
      <label x="400" y="617" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="563" y="661" comment="This is a loop." criteria="job in mac.jobList" branchType="while">
      <label x="563" y="646" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="755" y="659" comment="This is a loop." criteria="job in mac.buffer" branchType="while">
      <label x="755" y="644" text="Evaluate Criteria"/>
    </decisionstep>
  </decisionsteps>
  <joinsteps/>
  <agentproperties>
    <agentproperty x="66" y="439" comment="This is an agent property." visibility="0" compiledname="processingTime" type="int" defaultvalue="0">
      <label x="71" y="424" text="ProcessingTime"/>
    </agentproperty>
    <agentproperty x="54" y="537" comment="[user]" visibility="0" compiledname="owner" type="Map" defaultvalue="[:]">
      <label x="59" y="522" text="Owner"/>
    </agentproperty>
    <agentproperty x="148" y="538" comment="This is an agent property." visibility="0" compiledname="master" type="ecosystem.Order" defaultvalue="null">
      <label x="153" y="523" text="Master"/>
    </agentproperty>
    <agentproperty x="487" y="344" comment="This is an agent property." visibility="0" compiledname="remainingTime" type="int" defaultvalue="-1">
      <label x="492" y="326" text="RemainingTime"/>
    </agentproperty>
    <agentproperty x="127" y="85" comment="This is an agent property." visibility="0" compiledname="type" type="String" defaultvalue="&quot;&quot;">
      <label x="132" y="70" text="Type"/>
    </agentproperty>
    <agentproperty x="730" y="98" comment="This is an agent property." visibility="0" compiledname="pause" type="boolean" defaultvalue="true">
      <label x="735" y="83" text="Pause Mark"/>
    </agentproperty>
  </agentproperties>
  <endsteps>
    <endstep x="68" y="327"/>
    <endstep x="299" y="491"/>
    <endstep x="517" y="421"/>
    <endstep x="67" y="822"/>
    <endstep x="418" y="839"/>
  </endsteps>
  <connections>
    <transitions>
      <transition>
        <transitionsource type="behavior" index="0" anchor="0"/>
        <transitiontarget type="task" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="behavior" index="1" anchor="0"/>
        <transitiontarget type="decision" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="behavior" index="2" anchor="0"/>
        <transitiontarget type="decision" index="2" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="behavior" index="3" anchor="0"/>
        <transitiontarget type="task" index="10" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="behavior" index="4" anchor="0"/>
        <transitiontarget type="decision" index="7" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="0" anchor="2"/>
        <transitiontarget type="end" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="1" anchor="2"/>
        <transitiontarget type="end" index="1" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="4" anchor="2"/>
        <transitiontarget type="decision" index="3" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="7" anchor="2"/>
        <transitiontarget type="decision" index="5" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="10" anchor="2"/>
        <transitiontarget type="end" index="3" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="11" anchor="2"/>
        <transitiontarget type="end" index="4" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="13" anchor="3"/>
        <transitiontarget type="decision" index="9" anchor="1"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="15" anchor="2"/>
        <transitiontarget type="decision" index="8" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="16" anchor="2"/>
        <transitiontarget type="task" index="15" anchor="0"/>
        <bendpoints/>
      </transition>
    </transitions>
    <booleantransitions>
      <booleantransition value="true">
        <transitionsource type="decision" index="0" anchor="3"/>
        <transitiontarget type="decision" index="1" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="0" anchor="2"/>
        <transitiontarget type="task" index="1" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="1" anchor="0"/>
        <transitiontarget type="task" index="2" anchor="2"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="1" anchor="2"/>
        <transitiontarget type="task" index="3" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="2" anchor="2"/>
        <transitiontarget type="task" index="4" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="3" anchor="3"/>
        <transitiontarget type="decision" index="4" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="3" anchor="2"/>
        <transitiontarget type="end" index="2" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="4" anchor="2"/>
        <transitiontarget type="task" index="5" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="4" anchor="0"/>
        <transitiontarget type="task" index="8" anchor="2"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="5" anchor="1"/>
        <transitiontarget type="task" index="6" anchor="3"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="6" anchor="3"/>
        <transitiontarget type="task" index="9" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="7" anchor="2"/>
        <transitiontarget type="task" index="11" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="8" anchor="2"/>
        <transitiontarget type="task" index="12" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="8" anchor="3"/>
        <transitiontarget type="task" index="13" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="9" anchor="2"/>
        <transitiontarget type="task" index="14" anchor="0"/>
        <bendpoints/>
      </booleantransition>
    </booleantransitions>
  </connections>
</agent>