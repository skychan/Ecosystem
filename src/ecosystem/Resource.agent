<?xml version="1.0" encoding="UTF-8"?>
<agent version="1" agentcomment="This is an agent." agentclassname="Resource" agentparentclassname="ecosystem.Machine" agentinterfaces="" agentimports="">
  <behaviorsteps>
    <behaviorstep x="63" y="119" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="1" watchannotationtriggerdelta="1" watchannotationtriggerpriority="" watchannotationpick="" comment="This is the step behavior." visibility="0" returntype="" compiledname="Resource" parameters="" exceptions="">
      <label x="63" y="104" text="Constructor"/>
    </behaviorstep>
    <behaviorstep x="407" y="951" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="ecosystem.PureProvider" watchannotationtargetfieldnames="serviceCalling" watchannotationtriggercondition="$watcher.serviceNeedCapacity == 0" watchannotationtriggerschedule="1" watchannotationtriggerdelta="0.2" watchannotationtriggerpriority="" watchannotationpick="" comment="Response to the need call" visibility="0" returntype="def" compiledname="ResponseService" parameters="ecosystem.PureProvider watchedAgent" exceptions="">
      <label x="407" y="936" text="Response with reality"/>
    </behaviorstep>
    <behaviorstep x="228" y="1004" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="ecosystem.PureProvider" watchannotationtargetfieldnames="serviceCalling" watchannotationtriggercondition="$watcher.serviceNeedCapacity == 0" watchannotationtriggerschedule="1" watchannotationtriggerdelta="0.1" watchannotationtriggerpriority="" watchannotationpick="" comment="Response to the need call" visibility="0" returntype="def" compiledname="ResponseServiceCall" parameters="ecosystem.PureProvider watchedAgent" exceptions="">
      <label x="228" y="989" text="Response the service call"/>
    </behaviorstep>
    <behaviorstep x="495" y="207" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="1" watchannotationtriggerdelta="1" watchannotationtriggerpriority="" watchannotationpick="" comment="This is the step behavior." visibility="0" returntype="void" compiledname="Assign" parameters="sc,amount" exceptions="">
      <label x="495" y="192" text="Assign"/>
    </behaviorstep>
  </behaviorsteps>
  <tasksteps>
    <taskstep x="58" y="202" comment="This is a task." command1="selectBehavior = new SelectInTask()" command2="" command3="" command4="" command5="">
      <label x="58" y="187" text="Do Task"/>
    </taskstep>
    <taskstep x="336" y="1398" comment="This is a task." command1="prd.addCandidates(this)" command2="" command3="" command4="" command5="">
      <label x="336" y="1383" text="Do Task"/>
    </taskstep>
    <taskstep x="414" y="1483" comment="This is a task." command1="this.competeService = []" command2="" command3="" command4="" command5="">
      <label x="414" y="1468" text="Do Task"/>
    </taskstep>
    <taskstep x="514" y="1391" comment="This is a task." command1="break" command2="" command3="" command4="" command5="">
      <label x="514" y="1376" text="Do Task"/>
    </taskstep>
    <taskstep x="226" y="1294" comment="This is a task." command1="this.competeServiceTemp &lt;&lt; watchedAgent" command2="" command3="" command4="" command5="">
      <label x="226" y="1279" text="Enter the temp list"/>
    </taskstep>
    <taskstep x="415" y="1158" comment="This is a task." command1="int tempCap = this.getSourceable()" command2="int i = 0" command3="Evaluation(this.competeServiceTemp)" command4="" command5="">
      <label x="415" y="1143" text="Do Task"/>
    </taskstep>
    <taskstep x="414" y="1323" comment="This is a task." command1="this.competeServiceTemp = []" command2="" command3="" command4="" command5="">
      <label x="414" y="1308" text="Do Task"/>
    </taskstep>
    <taskstep x="512" y="1237" comment="This is a task." command1="this.competeService &lt;&lt; this.competeServiceTemp[i]" command2="i += 1" command3="tempCap -= this.competeServiceTemp[i].callContent[this.getType()]" command4="" command5="">
      <label x="512" y="1222" text="Do Task"/>
    </taskstep>
    <taskstep x="501" y="304" comment="This is a task." command1="" command2="" command3="" command4="" command5="">
      <label x="501" y="289" text="Do Task"/>
    </taskstep>
  </tasksteps>
  <decisionsteps>
    <decisionstep x="411" y="1396" comment="This is a loop." criteria="prd in this.competeService" branchType="while">
      <label x="411" y="1381" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="225" y="1143" comment="This is an agent decision." criteria="this.getSourceable() &gt; 0" branchType="if">
      <label x="225" y="1128" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="515" y="1315" comment="This is an agent decision." criteria="i == this.competeServiceTemp.size()-1" branchType="if">
      <label x="515" y="1300" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="226" y="1076" comment="Decide to take the task or not" criteria="true" branchType="if">
      <label x="226" y="1061" text="Take it or not"/>
    </decisionstep>
    <decisionstep x="409" y="1018" comment="This is an agent decision." criteria="this.getSourceable() &gt; 0" branchType="if">
      <label x="409" y="1003" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="405" y="1080" comment="This is an agent decision." criteria="this.getType() in watchedAgent.callContent.keySet()" branchType="if">
      <label x="405" y="1065" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="417" y="1239" comment="This is a loop." criteria="tempCap &gt; 0" branchType="while">
      <label x="417" y="1224" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="222" y="1208" comment="This is an agent decision." criteria="this.getType() in watchedAgent.callContent.keySet()" branchType="if">
      <label x="222" y="1193" text="Evaluate Criteria"/>
    </decisionstep>
  </decisionsteps>
  <joinsteps/>
  <agentproperties>
    <agentproperty x="113" y="1191" comment="This is an agent property." visibility="0" compiledname="sourceable" type="int" defaultvalue="0">
      <label x="118" y="1176" text="Source-able"/>
    </agentproperty>
    <agentproperty x="120" y="1095" comment="The var to record compete service temp" visibility="0" compiledname="competeServiceTemp" type="def" defaultvalue="[]">
      <label x="125" y="1080" text="Compete service temp"/>
    </agentproperty>
    <agentproperty x="119" y="1002" comment="The var to record compete service" visibility="0" compiledname="competeService" type="def" defaultvalue="[]">
      <label x="124" y="987" text="Compete service"/>
    </agentproperty>
  </agentproperties>
  <endsteps>
    <endstep x="71" y="319"/>
    <endstep x="448" y="1586"/>
    <endstep x="258" y="1408"/>
    <endstep x="519" y="405"/>
  </endsteps>
  <connections>
    <transitions>
      <transition>
        <transitionsource type="behavior" index="0" anchor="0"/>
        <transitiontarget type="task" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="0" anchor="2"/>
        <transitiontarget type="end" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="2" anchor="2"/>
        <transitiontarget type="end" index="1" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="4" anchor="2"/>
        <transitiontarget type="end" index="2" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="5" anchor="2"/>
        <transitiontarget type="decision" index="6" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="6" anchor="2"/>
        <transitiontarget type="decision" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="behavior" index="1" anchor="0"/>
        <transitiontarget type="decision" index="4" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="behavior" index="2" anchor="0"/>
        <transitiontarget type="decision" index="3" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="7" anchor="2"/>
        <transitiontarget type="decision" index="2" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="8" anchor="2"/>
        <transitiontarget type="end" index="3" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="behavior" index="3" anchor="0"/>
        <transitiontarget type="task" index="8" anchor="0"/>
        <bendpoints/>
      </transition>
    </transitions>
    <booleantransitions>
      <booleantransition value="true">
        <transitionsource type="decision" index="0" anchor="1"/>
        <transitiontarget type="task" index="1" anchor="3"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="0" anchor="2"/>
        <transitiontarget type="task" index="2" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="1" anchor="2"/>
        <transitiontarget type="decision" index="7" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="2" anchor="2"/>
        <transitiontarget type="task" index="3" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="3" anchor="2"/>
        <transitiontarget type="decision" index="1" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="4" anchor="2"/>
        <transitiontarget type="decision" index="5" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="5" anchor="2"/>
        <transitiontarget type="task" index="5" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="6" anchor="3"/>
        <transitiontarget type="task" index="7" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="6" anchor="2"/>
        <transitiontarget type="task" index="6" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="7" anchor="2"/>
        <transitiontarget type="task" index="4" anchor="0"/>
        <bendpoints/>
      </booleantransition>
    </booleantransitions>
  </connections>
</agent>