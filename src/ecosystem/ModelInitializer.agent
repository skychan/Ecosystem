<?xml version="1.0" encoding="UTF-8"?>
<agent version="1" agentcomment="This is a model initializer." agentclassname="ModelInitializer" agentparentclassname="" agentinterfaces="" agentimports="">
  <behaviorsteps>
    <behaviorstep x="70" y="85" scheduleannotationstart="" scheduleannotationpick="ScheduledMethod.ALL" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="0" watchannotationtriggerdelta="" watchannotationtriggerpriority="" watchannotationpick="" comment="This is the user model builder" visibility="0" returntype="def" compiledname="initializeModel" parameters="" exceptions="">
      <label x="61" y="69" text="Initialize Model"/>
    </behaviorstep>
  </behaviorsteps>
  <tasksteps>
    <taskstep x="71" y="193" comment="This is a task." command1="Object agent = CreateAgent(&quot;Ecosystem&quot;, &quot;ecosystem.CloudPlatform&quot;)" command2="CloudPlatform platform = (CloudPlatform) agent" command3="" command4="" command5="">
      <label x="71" y="178" text="Create Platform"/>
    </taskstep>
    <taskstep x="205" y="281" comment="This is a task." command1="Object dagent = CreateAgent(&quot;Ecosystem&quot;, &quot;ecosystem.PureDemander&quot;)" command2="PureDemander pureDemander = (PureDemander) dagent" command3="pureDemander.ReadData((i).toString())" command4="platform.addUser(pureDemander)" command5="pureDemander.GenerateOrder()">
      <label x="205" y="266" text="Create Demander"/>
    </taskstep>
    <taskstep x="361" y="510" comment="This is a task." command1="Object ragent = CreateAgent(&quot;Ecosystem&quot;, &quot;ecosystem.Resource&quot;)" command2="Resource res = (Resource) ragent" command3="res.setType(i)" command4="res.setCapacity(RandomHelper.nextIntFromTo(10, 17))" command5="res.setAvailable(res.getCapacity())">
      <label x="361" y="495" text="Create Resource"/>
    </taskstep>
    <taskstep x="238" y="389" comment="This is a task." command1="ArrayList test = 1..providerCount" command2="RandomHelper.setSeed(2)" command3="//SimUtilities.shuffle(test,RandomHelper.getUniform())" command4="" command5="">
      <label x="238" y="374" text="Do Task"/>
    </taskstep>
    <taskstep x="485" y="511" comment="This is a task." command1="Object pagent = CreateAgent(&quot;Ecosystem&quot;, &quot;ecosystem.PureProvider&quot;)" command2="PureProvider pureProvider = (PureProvider) pagent" command3="" command4="res.addOwner(pureProvider)" command5="platform.addUser(pureProvider)">
      <label x="485" y="496" text="Create Provider"/>
    </taskstep>
    <taskstep x="609" y="509" comment="This is a task." command1="" command2="pureProvider.addResource(res)" command3="" command4="" command5="">
      <label x="609" y="494" text="Do Task"/>
    </taskstep>
  </tasksteps>
  <decisionsteps>
    <decisionstep x="70" y="280" comment="This is a loop." criteria="i in 249..&lt;250" branchType="while">
      <label x="70" y="265" text="Count Demander"/>
    </decisionstep>
    <decisionstep x="239" y="508" comment="This is a loop." criteria="i in test" branchType="while">
      <label x="239" y="493" text="Count Provider"/>
    </decisionstep>
  </decisionsteps>
  <joinsteps/>
  <agentproperties>
    <agentproperty x="237" y="150" comment="This is an agent property." visibility="0" compiledname="providerCount" type="int" defaultvalue="50">
      <label x="242" y="135" text="Provider Count"/>
    </agentproperty>
    <agentproperty x="401" y="59" comment="This is an agent property." visibility="0" compiledname="demanderList" type="ArrayList" defaultvalue="new ArrayList()">
      <label x="406" y="44" text="Demander List"/>
    </agentproperty>
    <agentproperty x="401" y="155" comment="This is an agent property." visibility="0" compiledname="providerList" type="ArrayList" defaultvalue="new ArrayList()">
      <label x="406" y="140" text="Provider List"/>
    </agentproperty>
  </agentproperties>
  <endsteps>
    <endstep x="75" y="454"/>
  </endsteps>
  <connections>
    <transitions>
      <transition>
        <transitionsource type="behavior" index="0" anchor="0"/>
        <transitiontarget type="task" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="0" anchor="2"/>
        <transitiontarget type="decision" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="2" anchor="3"/>
        <transitiontarget type="task" index="4" anchor="1"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="3" anchor="2"/>
        <transitiontarget type="decision" index="1" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="4" anchor="3"/>
        <transitiontarget type="task" index="5" anchor="1"/>
        <bendpoints/>
      </transition>
    </transitions>
    <booleantransitions>
      <booleantransition value="true">
        <transitionsource type="decision" index="0" anchor="3"/>
        <transitiontarget type="task" index="1" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="0" anchor="2"/>
        <transitiontarget type="end" index="0" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="1" anchor="3"/>
        <transitiontarget type="task" index="2" anchor="1"/>
        <bendpoints/>
      </booleantransition>
    </booleantransitions>
  </connections>
</agent>