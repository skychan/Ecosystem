<?xml version="1.0" encoding="UTF-8"?>
<agent version="1" agentcomment="This is an agent." agentclassname="SelectInTask" agentparentclassname="" agentinterfaces="ecosystem.SelectBehavior" agentimports="">
  <behaviorsteps>
    <behaviorstep x="269" y="101" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="0" watchannotationtriggerdelta="" watchannotationtriggerpriority="" watchannotationpick="" comment="Select" visibility="0" returntype="def" compiledname="Select" parameters="t,candidates" exceptions="">
      <label x="269" y="86" text="Select"/>
    </behaviorstep>
    <behaviorstep x="71" y="68" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="1" watchannotationtriggerdelta="1" watchannotationtriggerpriority="" watchannotationpick="" comment="Evaluation" visibility="0" returntype="def" compiledname="Evaluation" parameters="t,candidates" exceptions="">
      <label x="71" y="53" text="Evaluation"/>
    </behaviorstep>
    <behaviorstep x="564" y="55" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="1" watchannotationtriggerdelta="1" watchannotationtriggerpriority="" watchannotationpick="" comment="This is the step behavior." visibility="0" returntype="Map" compiledname="Allocate" parameters="theOnes" exceptions="">
      <label x="564" y="40" text="Allocate"/>
    </behaviorstep>
    <behaviorstep x="926" y="65" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="1" watchannotationtriggerdelta="1" watchannotationtriggerpriority="" watchannotationpick="" comment="This is the step behavior." visibility="0" returntype="void" compiledname="Assign" parameters="allocation,t" exceptions="">
      <label x="926" y="50" text="Assign"/>
    </behaviorstep>
  </behaviorsteps>
  <tasksteps>
    <taskstep x="269" y="353" comment="This is a task." command1="returnValue = chosenMap" command2="//println &quot;after the selection and clear&quot;" command3="" command4="" command5="">
      <label x="269" y="338" text="Do Task"/>
    </taskstep>
    <taskstep x="5" y="249" comment="This is a task." command1="returnValue = null" command2="" command3="" command4="" command5="">
      <label x="5" y="234" text="Do Task"/>
    </taskstep>
    <taskstep x="379" y="259" comment="This is a task." command1="def theType = candidate.key" command2="def theList = candidate.value" command3="chosenMap[theType] = Evaluation(t,theList)" command4="" command5="">
      <label x="379" y="244" text="Do Task"/>
    </taskstep>
    <taskstep x="473" y="354" comment="This is a task." command1="res.competeList.remove(t)" command2="" command3="" command4="" command5="">
      <label x="473" y="339" text="Do Task"/>
    </taskstep>
    <taskstep x="267" y="172" comment="This is a task." command1="def chosenMap = [:]" command2="" command3="" command4="" command5="">
      <label x="267" y="157" text="Do Task"/>
    </taskstep>
    <taskstep x="79" y="313" comment="This is a task." command1="candidates.sort{[-it.getAvailable(),it.jobList.size()]}" command2="returnValue = candidates[0]" command3="" command4="" command5="">
      <label x="79" y="298" text="Do Task"/>
    </taskstep>
    <taskstep x="568" y="130" comment="This is a task." command1="int nullCount = theOnes.values().count(null)" command2="" command3="" command4="" command5="">
      <label x="568" y="115" text="Do Task"/>
    </taskstep>
    <taskstep x="778" y="203" comment="This is a task." command1="returnValue =  [success:false,allocation:[:]]" command2="" command3="" command4="" command5="">
      <label x="778" y="188" text="Chose Nothing"/>
    </taskstep>
    <taskstep x="474" y="278" comment="This is a task." command1="returnValue =  [success:true,allocation:[&apos;service&apos;:theOnes[&apos;service&apos;]]]" command2="" command3="" command4="" command5="">
      <label x="474" y="263" text="Chose Service"/>
    </taskstep>
    <taskstep x="688" y="288" comment="This is a task." command1="theOnes.remove(&apos;service&apos;)" command2="returnValue =  [success:true,allocation:theOnes]" command3="" command4="" command5="">
      <label x="688" y="273" text="Chose resources"/>
    </taskstep>
    <taskstep x="733" y="387" comment="This is a task." command1="def candidateList = theOnes.values()" command2="candidateList.sort{ [ it.getFullLength(), -it.getQuality() ] }" command3="" command4="" command5="">
      <label x="733" y="372" text="Do Task"/>
    </taskstep>
    <taskstep x="567" y="558" comment="This is a task." command1="returnValue =  [success:true,allocation:[&apos;service&apos;:theOnes[&apos;service&apos;]]]" command2="" command3="" command4="" command5="">
      <label x="567" y="543" text="True"/>
    </taskstep>
    <taskstep x="671" y="463" comment="This is a task." command1="theOnes.remove(&apos;service&apos;)" command2="returnValue =  [success:true,allocation:theOnes]" command3="" command4="" command5="">
      <label x="671" y="448" text="Do Task"/>
    </taskstep>
    <taskstep x="1037" y="140" comment="This is a task." command1="mac.Assign(t)" command2="" command3="" command4="" command5="">
      <label x="1037" y="125" text="Do Task"/>
    </taskstep>
    <taskstep x="178" y="319" comment="This is a task." command1="candidates.dropWhile{ it in t.owner.keySet() }" command2="candidates.sort{[it.jobList.size()]}" command3="returnValue = candidates[0]" command4="" command5="">
      <label x="176" y="297" text="Do Task"/>
    </taskstep>
    <taskstep x="427" y="445" comment="This is a task." command1="Scanner reader = new Scanner(System.in)" command2="println(&quot;add frequency &quot;)" command3="int n = reader.nextInt()" command4="" command5="">
      <label x="427" y="430" text="鍋�"/>
    </taskstep>
    <taskstep x="569" y="379" comment="This is a task." command1="def candidateList = theOnes.values()" command2="candidateList.sort{ [it.getFullLength(), -it.getQuality()] }" command3="" command4="" command5="">
      <label x="569" y="364" text="Do Task"/>
    </taskstep>
  </tasksteps>
  <decisionsteps>
    <decisionstep x="270" y="258" comment="This is a loop." criteria="candidate in candidates" branchType="while">
      <label x="270" y="243" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="378" y="350" comment="This is a loop." criteria="res in theList" branchType="while">
      <label x="378" y="335" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="70" y="169" comment="This is an agent decision." criteria="candidates == []" branchType="if">
      <label x="70" y="154" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="565" y="204" comment="This is an agent decision." criteria="theOnes[&apos;service&apos;] == null" branchType="if">
      <label x="565" y="189" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="566" y="285" comment="This is an agent decision." criteria="nullCount &gt; 0" branchType="if">
      <label x="566" y="270" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="569" y="471" comment="This is an agent decision." criteria="candidateList[0].getClass() == ecosystem.Service" branchType="if">
      <label x="569" y="456" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="921" y="150" comment="This is a loop." criteria="mac in allocation.values()" branchType="while">
      <label x="921" y="135" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="132" y="244" comment="This is an agent decision." criteria="candidates[0].getClass() == ecosystem.Service" branchType="if">
      <label x="132" y="229" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="677" y="205" comment="This is an agent decision." criteria="nullCount &gt; 1" branchType="if">
      <label x="677" y="190" text="Evaluate Criteria"/>
    </decisionstep>
  </decisionsteps>
  <joinsteps>
    <joinstep x="109" y="536"/>
    <joinstep x="153" y="445"/>
  </joinsteps>
  <agentproperties/>
  <endsteps>
    <endstep x="275" y="454"/>
    <endstep x="109" y="654"/>
    <endstep x="859" y="248"/>
    <endstep x="966" y="350"/>
  </endsteps>
  <connections>
    <transitions>
      <transition>
        <transitionsource type="behavior" index="0" anchor="0"/>
        <transitiontarget type="task" index="4" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="behavior" index="1" anchor="0"/>
        <transitiontarget type="decision" index="2" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="behavior" index="2" anchor="0"/>
        <transitiontarget type="task" index="6" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="behavior" index="3" anchor="0"/>
        <transitiontarget type="decision" index="6" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="0" anchor="2"/>
        <transitiontarget type="end" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="1" anchor="2"/>
        <transitiontarget type="join" index="0" anchor="1"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="2" anchor="2"/>
        <transitiontarget type="decision" index="1" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="4" anchor="2"/>
        <transitiontarget type="decision" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="5" anchor="2"/>
        <transitiontarget type="join" index="1" anchor="1"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="6" anchor="2"/>
        <transitiontarget type="decision" index="3" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="7" anchor="3"/>
        <transitiontarget type="end" index="2" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="14" anchor="2"/>
        <transitiontarget type="join" index="1" anchor="3"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="join" index="0" anchor="2"/>
        <transitiontarget type="end" index="1" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="join" index="1" anchor="2"/>
        <transitiontarget type="join" index="0" anchor="3"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="16" anchor="2"/>
        <transitiontarget type="decision" index="5" anchor="0"/>
        <bendpoints/>
      </transition>
    </transitions>
    <booleantransitions>
      <booleantransition value="true">
        <transitionsource type="decision" index="0" anchor="3"/>
        <transitiontarget type="task" index="2" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="0" anchor="2"/>
        <transitiontarget type="task" index="0" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="1" anchor="3"/>
        <transitiontarget type="task" index="3" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="2" anchor="1"/>
        <transitiontarget type="task" index="1" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="2" anchor="3"/>
        <transitiontarget type="decision" index="7" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="3" anchor="3"/>
        <transitiontarget type="decision" index="8" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="3" anchor="2"/>
        <transitiontarget type="decision" index="4" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="4" anchor="1"/>
        <transitiontarget type="task" index="8" anchor="3"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="4" anchor="2"/>
        <transitiontarget type="task" index="16" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="5" anchor="2"/>
        <transitiontarget type="task" index="11" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="5" anchor="3"/>
        <transitiontarget type="task" index="12" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="6" anchor="3"/>
        <transitiontarget type="task" index="13" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="6" anchor="2"/>
        <transitiontarget type="end" index="3" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="7" anchor="3"/>
        <transitiontarget type="task" index="14" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="7" anchor="1"/>
        <transitiontarget type="task" index="5" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="8" anchor="3"/>
        <transitiontarget type="task" index="7" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="8" anchor="2"/>
        <transitiontarget type="task" index="9" anchor="0"/>
        <bendpoints/>
      </booleantransition>
    </booleantransitions>
  </connections>
</agent>