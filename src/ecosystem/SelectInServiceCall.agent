<?xml version="1.0" encoding="UTF-8"?>
<agent version="1" agentcomment="This is an agent." agentclassname="SelectInServiceCall" agentparentclassname="" agentinterfaces="ecosystem.SelectBehavior" agentimports="">
  <behaviorsteps>
    <behaviorstep x="249" y="53" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="0" watchannotationtriggerdelta="" watchannotationtriggerpriority="" watchannotationpick="" comment="This is the step behavior." visibility="0" returntype="def" compiledname="Select" parameters="sc,candidates" exceptions="">
      <label x="249" y="38" text="Select"/>
    </behaviorstep>
    <behaviorstep x="86" y="83" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="1" watchannotationtriggerdelta="1" watchannotationtriggerpriority="" watchannotationpick="" comment="Evaluation" visibility="0" returntype="def" compiledname="Evaluation" parameters="candidates" exceptions="">
      <label x="86" y="68" text="Evaluation"/>
    </behaviorstep>
    <behaviorstep x="658" y="66" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="1" watchannotationtriggerdelta="1" watchannotationtriggerpriority="" watchannotationpick="" comment="This is the step behavior." visibility="0" returntype="Map" compiledname="Allocate" parameters="theOnes" exceptions="">
      <label x="658" y="51" text="Allocate"/>
    </behaviorstep>
    <behaviorstep x="941" y="80" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="1" watchannotationtriggerdelta="1" watchannotationtriggerpriority="" watchannotationpick="" comment="This is the step behavior." visibility="0" returntype="void" compiledname="Assign" parameters="allocation,sc" exceptions="">
      <label x="941" y="65" text="Assign"/>
    </behaviorstep>
  </behaviorsteps>
  <tasksteps>
    <taskstep x="240" y="342" comment="This is a task." command1="returnValue = chosenMap" command2="" command3="" command4="" command5="">
      <label x="240" y="327" text="Reset"/>
    </taskstep>
    <taskstep x="356" y="222" comment="This is a task." command1="int needCap = sc.needResourceCapacity[candidate.key]" command2="candidate.value = Evaluation(candidate.value)" command3="chosenMap[candidate.key] = [:]" command4="" command5="">
      <label x="356" y="207" text="Do Task"/>
    </taskstep>
    <taskstep x="471" y="60" comment="This is a task." command1="res.setSourceable(res.getSourceable()-needCap)" command2="res.setServiceNeedCapacity(needCap)" command3="this.serviceStatus[res] = false" command4="this.prototype.addResource(res,needCap)" command5="res.setServiceProvider(this)">
      <label x="471" y="45" text="Do Task"/>
    </taskstep>
    <taskstep x="469" y="378" comment="This is a task." command1="chosenMap[candidate.key][res] = needCap" command2="" command3="" command4="needCap = 0" command5="break">
      <label x="469" y="363" text="Do Task"/>
    </taskstep>
    <taskstep x="355" y="462" comment="This is a task." command1="needCap -= res.getSourceable()" command2="chosenMap[candidate.key][res] = res.getSourceable()" command3="" command4="" command5="">
      <label x="355" y="447" text="Do Task"/>
    </taskstep>
    <taskstep x="253" y="143" comment="This is a task." command1="def chosenMap = [:]" command2="" command3="" command4="" command5="">
      <label x="253" y="128" text="Do Task"/>
    </taskstep>
    <taskstep x="20" y="264" comment="This is a task." command1="returnValue = []" command2="" command3="" command4="" command5="">
      <label x="20" y="249" text="Do Task"/>
    </taskstep>
    <taskstep x="149" y="264" comment="This is a task." command1="candidates.sort{[-it.getAvailable(),it.jobList.size()]}" command2="returnValue = candidates" command3="" command4="" command5="">
      <label x="149" y="249" text="Do Task"/>
    </taskstep>
    <taskstep x="464" y="210" comment="This is a task." command1="res.competeList.reomve(sc)" command2="" command3="" command4="" command5="">
      <label x="464" y="195" text="Do Task"/>
    </taskstep>
    <taskstep x="555" y="372" comment="This is a task." command1="chosenMap[candidate.key] = null" command2="" command3="" command4="" command5="">
      <label x="555" y="357" text="Do Task"/>
    </taskstep>
    <taskstep x="608" y="220" comment="This is a task." command1="returnValue = [success:true,allocation:theOnes]" command2="" command3="" command4="" command5="">
      <label x="608" y="205" text="Do Task"/>
    </taskstep>
    <taskstep x="709" y="225" comment="This is a task." command1="returnValue = [success:false,allocation:[:]]" command2="" command3="" command4="" command5="">
      <label x="709" y="210" text="Do Task"/>
    </taskstep>
    <taskstep x="1041" y="267" comment="This is a task." command1="data.key.Assign(sc,data.value)" command2="" command3="" command4="" command5="">
      <label x="1041" y="252" text="Do Task"/>
    </taskstep>
  </tasksteps>
  <decisionsteps>
    <decisionstep x="356" y="376" comment="This is an agent decision." criteria="needCap &lt;= res.getSourceable()" branchType="if">
      <label x="356" y="361" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="248" y="227" comment="This is a loop." criteria="candidate in candidates" branchType="while">
      <label x="248" y="212" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="357" y="299" comment="This is a loop." criteria="res in candidate.value" branchType="while">
      <label x="357" y="284" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="85" y="184" comment="This is an agent decision." criteria="candidates == []" branchType="if">
      <label x="85" y="169" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="461" y="295" comment="This is a loop." criteria="res in candidate.value" branchType="while">
      <label x="461" y="280" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="550" y="286" comment="This is an agent decision." criteria="needCap &gt; 0" branchType="if">
      <label x="550" y="271" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="659" y="149" comment="This is an agent decision." criteria="null in theOnes.values()" branchType="if">
      <label x="659" y="134" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="936" y="165" comment="This is a loop." criteria="resList in allocation.values()" branchType="while">
      <label x="936" y="150" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="1050" y="166" comment="This is a loop." criteria="data in resList" branchType="while">
      <label x="1050" y="151" text="Evaluate Criteria"/>
    </decisionstep>
  </decisionsteps>
  <joinsteps>
    <joinstep x="98" y="350"/>
    <joinstep x="669" y="297"/>
  </joinsteps>
  <agentproperties/>
  <endsteps>
    <endstep x="250" y="458"/>
    <endstep x="97" y="435"/>
    <endstep x="676" y="385"/>
    <endstep x="945" y="287"/>
  </endsteps>
  <connections>
    <transitions>
      <transition>
        <transitionsource type="behavior" index="0" anchor="0"/>
        <transitiontarget type="task" index="5" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="0" anchor="2"/>
        <transitiontarget type="end" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="1" anchor="2"/>
        <transitiontarget type="decision" index="2" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="5" anchor="2"/>
        <transitiontarget type="decision" index="1" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="behavior" index="1" anchor="0"/>
        <transitiontarget type="decision" index="3" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="6" anchor="2"/>
        <transitiontarget type="join" index="0" anchor="1"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="join" index="0" anchor="2"/>
        <transitiontarget type="end" index="1" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="7" anchor="2"/>
        <transitiontarget type="join" index="0" anchor="3"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="behavior" index="2" anchor="0"/>
        <transitiontarget type="decision" index="6" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="10" anchor="2"/>
        <transitiontarget type="join" index="1" anchor="1"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="11" anchor="2"/>
        <transitiontarget type="join" index="1" anchor="3"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="join" index="1" anchor="2"/>
        <transitiontarget type="end" index="2" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="behavior" index="3" anchor="0"/>
        <transitiontarget type="decision" index="7" anchor="0"/>
        <bendpoints/>
      </transition>
    </transitions>
    <booleantransitions>
      <booleantransition value="true">
        <transitionsource type="decision" index="0" anchor="3"/>
        <transitiontarget type="task" index="3" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="0" anchor="2"/>
        <transitiontarget type="task" index="4" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="1" anchor="3"/>
        <transitiontarget type="task" index="1" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="1" anchor="2"/>
        <transitiontarget type="task" index="0" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="2" anchor="2"/>
        <transitiontarget type="decision" index="0" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="2" anchor="3"/>
        <transitiontarget type="decision" index="4" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="3" anchor="1"/>
        <transitiontarget type="task" index="6" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="3" anchor="3"/>
        <transitiontarget type="task" index="7" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="4" anchor="0"/>
        <transitiontarget type="task" index="8" anchor="2"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="4" anchor="3"/>
        <transitiontarget type="decision" index="5" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="5" anchor="2"/>
        <transitiontarget type="task" index="9" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="6" anchor="1"/>
        <transitiontarget type="task" index="10" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="6" anchor="3"/>
        <transitiontarget type="task" index="11" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="7" anchor="2"/>
        <transitiontarget type="end" index="3" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="7" anchor="3"/>
        <transitiontarget type="decision" index="8" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="8" anchor="2"/>
        <transitiontarget type="task" index="12" anchor="0"/>
        <bendpoints/>
      </booleantransition>
    </booleantransitions>
  </connections>
</agent>