<?xml version="1.0" encoding="UTF-8"?>
<agent version="1" agentcomment="This is an agent." agentclassname="Demander" agentparentclassname="ecosystem.User" agentinterfaces="" agentimports="">
  <behaviorsteps>
    <behaviorstep x="289" y="57" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="0" watchannotationtriggerdelta="0" watchannotationtriggerpriority="" watchannotationpick="" comment="Generate Need" visibility="0" returntype="void" compiledname="GenerateOrder" parameters="String orderID" exceptions="">
      <label x="289" y="42" text="Generate Order"/>
    </behaviorstep>
    <behaviorstep x="335" y="640" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="1" watchannotationtriggerdelta="1" watchannotationtriggerpriority="" watchannotationpick="" comment="Read data from file" visibility="0" returntype="def" compiledname="ReadData" parameters="String orderID" exceptions="">
      <label x="335" y="625" text="Read Data"/>
    </behaviorstep>
  </behaviorsteps>
  <tasksteps>
    <taskstep x="285" y="307" comment="have need is to generate order" command1="Object agent = CreateAgent(&quot;Ecosystem&quot;, &quot;ecosystem.Order&quot;)" command2="//println this.taskMap" command3="Order o = (Order) agent" command4="o.setOwner(this)" command5="o.setType(&quot;Order&quot;+orderID)">
      <label x="285" y="292" text="Generate Order"/>
    </taskstep>
    <taskstep x="286" y="398" comment="Set the order parameters" command1="" command2="" command3="this.getOrderList().add(o)" command4="" command5="o.setParameters(this.taskMap)">
      <label x="286" y="383" text="Set parameters"/>
    </taskstep>
    <taskstep x="564" y="883" comment="This is a task." command1="int amount = sc.nextInt()" command2="" command3="" command4="" command5="">
      <label x="564" y="868" text="Do Task"/>
    </taskstep>
    <taskstep x="693" y="963" comment="This is a task." command1="sc.nextInt()" command2="" command3="" command4="" command5="">
      <label x="693" y="948" text="Do Task"/>
    </taskstep>
    <taskstep x="457" y="800" comment="This is a task." command1="def templist = [:]" command2="" command3="templist &lt;&lt; [p:sc.nextInt()]" command4="" command5="">
      <label x="457" y="785" text="Do Task"/>
    </taskstep>
    <taskstep x="712" y="881" comment="This is a task." command1="templist &lt;&lt; [(j):amount]" command2="" command3="" command4="" command5="">
      <label x="712" y="866" text="Do Task"/>
    </taskstep>
    <taskstep x="336" y="892" comment="This is a task." command1="" command2="" command3="" command4="" command5="">
      <label x="336" y="877" text="Do Task"/>
    </taskstep>
    <taskstep x="456" y="967" comment="This is a task." command1="this.taskMap &lt;&lt; [(i): templist]" command2="int nSuccessor = sc.nextInt()" command3="" command4="" command5="">
      <label x="456" y="952" text="Do Task"/>
    </taskstep>
    <taskstep x="334" y="714" comment="This is a task." command1="Scanner sc = new Scanner(new File(&quot;cases/Order&quot;+orderID+&quot;.rcp&quot;))" command2="int nTasks = sc.nextInt()" command3="int nServices = sc.nextInt()" command4="sc.nextLine()" command5="sc.nextLine()">
      <label x="334" y="699" text="Do Task"/>
    </taskstep>
    <taskstep x="614" y="222" comment="This is a task." command1="" command2="" command3="" command4="" command5="">
      <label x="614" y="207" text="Do Task"/>
    </taskstep>
    <taskstep x="413" y="141" comment="This is a task." command1="Parameters params = RunEnvironment.getInstance().getParameters()" command2="double mean = params.getValue(&quot;Mean&quot;)" command3="RandomHelper.init()" command4="RandomHelper.createPoisson(mean)" command5="">
      <label x="413" y="126" text="Randomize"/>
    </taskstep>
  </tasksteps>
  <decisionsteps>
    <decisionstep x="453" y="881" comment="This is a loop." criteria="int j in 1..nServices" branchType="while">
      <label x="453" y="866" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="643" y="884" comment="This is an agent decision." criteria="amount &gt; 0" branchType="if">
      <label x="643" y="869" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="335" y="801" comment="This is a loop." criteria="int i in 1..nTasks" branchType="while">
      <label x="335" y="786" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="571" y="963" comment="This is a loop." criteria="int s in 0..&lt;nSuccessor" branchType="while">
      <label x="571" y="948" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="411" y="217" comment="This is a loop." criteria="int i in RandomHelper.getPoisson().nextInt()" branchType="while">
      <label x="411" y="202" text="Evaluate Criteria"/>
    </decisionstep>
  </decisionsteps>
  <joinsteps/>
  <agentproperties>
    <agentproperty x="97" y="95" comment="Order List" visibility="0" compiledname="orderList" type="List" defaultvalue="[]">
      <label x="102" y="80" text="Order List"/>
    </agentproperty>
    <agentproperty x="489" y="628" comment="Task data read from file" visibility="0" compiledname="taskMap" type="def" defaultvalue="[:]">
      <label x="494" y="613" text="Task Map"/>
    </agentproperty>
    <agentproperty x="81" y="322" comment="Mark the difficulty level of the order type" visibility="0" compiledname="level" type="def" defaultvalue="[:]">
      <label x="86" y="307" text="Level"/>
    </agentproperty>
    <agentproperty x="87" y="233" comment="This is an agent property." visibility="0" compiledname="hardness" type="double" defaultvalue="0">
      <label x="92" y="218" text="Hardness"/>
    </agentproperty>
  </agentproperties>
  <endsteps>
    <endstep x="374" y="1044"/>
    <endstep x="568" y="273"/>
    <endstep x="297" y="503"/>
  </endsteps>
  <connections>
    <transitions>
      <transition>
        <transitionsource type="behavior" index="0" anchor="0"/>
        <transitiontarget type="task" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="behavior" index="1" anchor="0"/>
        <transitiontarget type="task" index="8" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="0" anchor="2"/>
        <transitiontarget type="task" index="1" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="1" anchor="2"/>
        <transitiontarget type="end" index="2" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="2" anchor="3"/>
        <transitiontarget type="decision" index="1" anchor="1"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="4" anchor="2"/>
        <transitiontarget type="decision" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="6" anchor="2"/>
        <transitiontarget type="end" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="7" anchor="3"/>
        <transitiontarget type="decision" index="3" anchor="1"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="8" anchor="2"/>
        <transitiontarget type="decision" index="2" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="10" anchor="2"/>
        <transitiontarget type="decision" index="4" anchor="0"/>
        <bendpoints/>
      </transition>
    </transitions>
    <booleantransitions>
      <booleantransition value="true">
        <transitionsource type="decision" index="0" anchor="3"/>
        <transitiontarget type="task" index="2" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="0" anchor="2"/>
        <transitiontarget type="task" index="7" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="1" anchor="3"/>
        <transitiontarget type="task" index="5" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="2" anchor="3"/>
        <transitiontarget type="task" index="4" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="2" anchor="2"/>
        <transitiontarget type="task" index="6" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="3" anchor="3"/>
        <transitiontarget type="task" index="3" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="4" anchor="3"/>
        <transitiontarget type="end" index="1" anchor="0"/>
        <bendpoints/>
      </booleantransition>
    </booleantransitions>
  </connections>
</agent>