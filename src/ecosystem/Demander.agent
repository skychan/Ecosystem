<?xml version="1.0" encoding="UTF-8"?>
<agent version="1" agentcomment="This is an agent." agentclassname="Demander" agentparentclassname="ecosystem.User" agentinterfaces="" agentimports="">
  <behaviorsteps>
    <behaviorstep x="289" y="57" scheduleannotationstart="1" scheduleannotationpick="" scheduleannotationinterval="1" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="0" watchannotationtriggerdelta="0" watchannotationtriggerpriority="" watchannotationpick="" comment="Generate Need" visibility="0" returntype="void" compiledname="GenerateOrder" parameters="" exceptions="">
      <label x="289" y="42" text="Generate Order"/>
    </behaviorstep>
    <behaviorstep x="709" y="19" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="1" watchannotationtriggerdelta="1" watchannotationtriggerpriority="" watchannotationpick="" comment="Read data from file" visibility="0" returntype="def" compiledname="ReadData" parameters="String orderID" exceptions="">
      <label x="709" y="4" text="Read Data"/>
    </behaviorstep>
    <behaviorstep x="75" y="445" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="1" watchannotationtriggerdelta="1" watchannotationtriggerpriority="" watchannotationpick="" comment="This is the step behavior." visibility="0" returntype="void" compiledname="Finish" parameters="order" exceptions="">
      <label x="75" y="430" text="Finish"/>
    </behaviorstep>
  </behaviorsteps>
  <tasksteps>
    <taskstep x="280" y="361" comment="have need is to generate order" command1="Object agent = CreateAgent(&quot;Ecosystem&quot;, &quot;ecosystem.Order&quot;)" command2="//println this.taskMap" command3="Order o = (Order) agent" command4="o.setOwner(this)" command5="o.setType(&quot;Order&quot;+type.toString())">
      <label x="280" y="346" text="Generate Order"/>
    </taskstep>
    <taskstep x="281" y="452" comment="Set the order parameters" command1="" command2="" command3="this.orderList.add(o)" command4="o.plt = this.plt" command5="o.setParameters(this.taskMap[type.toString()])">
      <label x="281" y="437" text="Set parameters"/>
    </taskstep>
    <taskstep x="937" y="306" comment="This is a task." command1="int amount = sc.nextInt()" command2="" command3="" command4="" command5="">
      <label x="937" y="291" text="Do Task"/>
    </taskstep>
    <taskstep x="1066" y="386" comment="This is a task." command1="sc.nextInt()" command2="" command3="" command4="" command5="">
      <label x="1066" y="371" text="Do Task"/>
    </taskstep>
    <taskstep x="830" y="223" comment="This is a task." command1="def templist = [:]" command2="" command3="templist &lt;&lt; [p:sc.nextInt()]" command4="" command5="">
      <label x="830" y="208" text="Do Task"/>
    </taskstep>
    <taskstep x="1085" y="304" comment="This is a task." command1="templist &lt;&lt; [(j):amount]" command2="" command3="" command4="" command5="">
      <label x="1085" y="289" text="Do Task"/>
    </taskstep>
    <taskstep x="709" y="315" comment="This is a task." command1="this.taskMap[orderID] = tempdata" command2="" command3="" command4="" command5="">
      <label x="709" y="300" text="Do Task"/>
    </taskstep>
    <taskstep x="829" y="390" comment="This is a task." command1="tempdata &lt;&lt; [(i): templist]" command2="int nSuccessor = sc.nextInt()" command3="" command4="" command5="">
      <label x="829" y="375" text="Do Task"/>
    </taskstep>
    <taskstep x="708" y="93" comment="This is a task." command1="Scanner sc = new Scanner(new File(&quot;cases/Order&quot;+orderID+&quot;.rcp&quot;))" command2="int nTasks = sc.nextInt()" command3="int nServices = sc.nextInt()" command4="sc.nextLine()" command5="sc.nextLine()">
      <label x="708" y="78" text="Do Task"/>
    </taskstep>
    <taskstep x="284" y="135" comment="This is a task." command1="Parameters params = RunEnvironment.getInstance().getParameters()" command2="double mean = params.getValue(&quot;Order&quot;)" command3="ArrayList types = 345..&lt;355" command4="RandomHelper.createPoisson(mean)" command5="SimUtilities.shuffle(types,RandomHelper.getUniform())">
      <label x="284" y="120" text="Randomize"/>
    </taskstep>
    <taskstep x="77" y="525" comment="This is a task." command1="this.orderList.remove(order)" command2="RemoveAgentFromModel(order)" command3="" command4="" command5="">
      <label x="77" y="510" text="Do Task"/>
    </taskstep>
    <taskstep x="706" y="160" comment="This is a task." command1="Map tempdata = [:]" command2="" command3="" command4="" command5="">
      <label x="706" y="145" text="Do Task"/>
    </taskstep>
    <taskstep x="287" y="210" comment="This is a task." command1="types = types.take(RandomHelper.nextIntFromTo(0,RandomHelper.getPoisson().nextInt()))" command2="" command3="" command4="" command5="">
      <label x="287" y="195" text="Do Task"/>
    </taskstep>
  </tasksteps>
  <decisionsteps>
    <decisionstep x="826" y="304" comment="This is a loop." criteria="int j in 1..nServices" branchType="while">
      <label x="826" y="289" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="1016" y="307" comment="This is an agent decision." criteria="amount &gt; 0" branchType="if">
      <label x="1016" y="292" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="708" y="224" comment="This is a loop." criteria="int i in 1..nTasks" branchType="while">
      <label x="708" y="209" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="944" y="386" comment="This is a loop." criteria="int s in 0..&lt;nSuccessor" branchType="while">
      <label x="944" y="371" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="286" y="285" comment="This is a loop." criteria="type in types" branchType="while">
      <label x="286" y="270" text="Evaluate Criteria"/>
    </decisionstep>
  </decisionsteps>
  <joinsteps/>
  <agentproperties>
    <agentproperty x="59" y="89" comment="Order List" visibility="0" compiledname="orderList" type="List" defaultvalue="[]">
      <label x="64" y="74" text="Order List"/>
    </agentproperty>
    <agentproperty x="862" y="51" comment="Task data read from file" visibility="0" compiledname="taskMap" type="def" defaultvalue="[:]">
      <label x="867" y="36" text="Task Map"/>
    </agentproperty>
    <agentproperty x="81" y="322" comment="Mark the difficulty level of the order type" visibility="0" compiledname="level" type="def" defaultvalue="[:]">
      <label x="86" y="307" text="Level"/>
    </agentproperty>
    <agentproperty x="63" y="223" comment="This is an agent property." visibility="0" compiledname="hardness" type="double" defaultvalue="0">
      <label x="68" y="208" text="Hardness"/>
    </agentproperty>
    <agentproperty x="497" y="303" comment="This is an agent property." visibility="0" compiledname="plt" type="def" defaultvalue="0">
      <label x="502" y="288" text="Plt"/>
    </agentproperty>
  </agentproperties>
  <endsteps>
    <endstep x="725" y="434"/>
    <endstep x="296" y="547"/>
    <endstep x="99" y="619"/>
  </endsteps>
  <connections>
    <transitions>
      <transition>
        <transitionsource type="behavior" index="0" anchor="0"/>
        <transitiontarget type="task" index="9" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="behavior" index="1" anchor="0"/>
        <transitiontarget type="task" index="8" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="behavior" index="2" anchor="0"/>
        <transitiontarget type="task" index="10" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="0" anchor="2"/>
        <transitiontarget type="task" index="1" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="1" anchor="2"/>
        <transitiontarget type="end" index="1" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="2" anchor="3"/>
        <transitiontarget type="decision" index="1" anchor="1"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="4" anchor="2"/>
        <transitiontarget type="decision" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="6" anchor="2"/>
        <transitiontarget type="end" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="7" anchor="3"/>
        <transitiontarget type="decision" index="3" anchor="1"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="8" anchor="2"/>
        <transitiontarget type="task" index="11" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="9" anchor="2"/>
        <transitiontarget type="task" index="12" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="10" anchor="2"/>
        <transitiontarget type="end" index="2" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="11" anchor="2"/>
        <transitiontarget type="decision" index="2" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="12" anchor="2"/>
        <transitiontarget type="decision" index="4" anchor="0"/>
        <bendpoints/>
      </transition>
    </transitions>
    <booleantransitions>
      <booleantransition value="true">
        <transitionsource type="decision" index="0" anchor="3"/>
        <transitiontarget type="task" index="2" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="0" anchor="2"/>
        <transitiontarget type="task" index="7" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="1" anchor="3"/>
        <transitiontarget type="task" index="5" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="2" anchor="3"/>
        <transitiontarget type="task" index="4" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="2" anchor="2"/>
        <transitiontarget type="task" index="6" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="3" anchor="3"/>
        <transitiontarget type="task" index="3" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="4" anchor="2"/>
        <transitiontarget type="task" index="0" anchor="0"/>
        <bendpoints/>
      </booleantransition>
    </booleantransitions>
  </connections>
</agent>