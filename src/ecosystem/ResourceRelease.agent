<?xml version="1.0" encoding="UTF-8"?>
<agent version="1" agentcomment="This is an agent." agentclassname="ResourceRelease" agentparentclassname="" agentinterfaces="ecosystem.ReleaseBehavior" agentimports="">
  <behaviorsteps>
    <behaviorstep x="74" y="56" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="1" watchannotationtriggerdelta="1" watchannotationtriggerpriority="" watchannotationpick="" comment="This is the step behavior." visibility="0" returntype="void" compiledname="Release" parameters="Task t,Machine r" exceptions="">
      <label x="74" y="41" text="Release the capacity"/>
    </behaviorstep>
    <behaviorstep x="269" y="59" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="1" watchannotationtriggerdelta="1" watchannotationtriggerpriority="" watchannotationpick="" comment="This is the step behavior." visibility="0" returntype="void" compiledname="Next" parameters="Machine m" exceptions="">
      <label x="269" y="44" text="Next"/>
    </behaviorstep>
  </behaviorsteps>
  <tasksteps>
    <taskstep x="71" y="151" comment="This is a task." command1="r.setAvailable( r.getAvailable() + t.needResourceCapacity[ r.getType() ] )" command2="r.buffer.remove(t)" command3="" command4="" command5="">
      <label x="71" y="136" text="Do Task"/>
    </taskstep>
    <taskstep x="485" y="471" comment="This is a task." command1="m.assignBehavior.Buffer(j,m)" command2="m.jobList.remove(j)" command3="" command4="" command5="">
      <label x="485" y="456" text="Do Task"/>
    </taskstep>
    <taskstep x="272" y="143" comment="This is a task." command1="Map newList = m.jobList.sort{ [ -it.value, it.key.getType() ] }" command2="def job = newList.keySet()[0]" command3="println &quot;always get here?&quot;" command4="" command5="">
      <label x="272" y="128" text="Sort"/>
    </taskstep>
    <taskstep x="498" y="218" comment="This is a task." command1="m.assignBehavior.Buffer(job,m)" command2="m.jobList.remove(job)" command3="" command4="" command5="">
      <label x="498" y="203" text="Service Call Resource Ready"/>
    </taskstep>
    <taskstep x="386" y="462" comment="This is a task." command1="println &quot;can i get here?&quot;" command2="break" command3="" command4="" command5="">
      <label x="386" y="447" text="Do Task"/>
    </taskstep>
    <taskstep x="585" y="386" comment="This is a task." command1="break" command2="" command3="" command4="" command5="">
      <label x="585" y="371" text="Do Task"/>
    </taskstep>
    <taskstep x="187" y="291" comment="This is a task." command1="println &quot;always get here?&quot;" command2="println &quot;the mistery list&quot; + m.jobList.keySet()" command3="" command4="" command5="">
      <label x="187" y="276" text="Do Task"/>
    </taskstep>
  </tasksteps>
  <decisionsteps>
    <decisionstep x="279" y="378" comment="This is a loop." criteria="j in newList.keySet()" branchType="while">
      <label x="279" y="363" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="483" y="382" comment="This is an agent decision." criteria="m.getAvailable() &gt;= j.needResourceCapacity[m.getType()]" branchType="if">
      <label x="483" y="367" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="275" y="218" comment="This is an agent decision." criteria="job.getClass() == ecosystem.ServiceCall" branchType="if">
      <label x="275" y="203" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="392" y="220" comment="This is an agent decision." criteria="m.buffer == []" branchType="if">
      <label x="392" y="205" text="Evaluate Criteria"/>
    </decisionstep>
    <decisionstep x="380" y="379" comment="This is an agent decision." criteria="j.getClass() == ecosystem.ServiceCall" branchType="if">
      <label x="380" y="364" text="Evaluate Criteria"/>
    </decisionstep>
  </decisionsteps>
  <joinsteps/>
  <agentproperties/>
  <endsteps>
    <endstep x="77" y="297"/>
    <endstep x="302" y="490"/>
  </endsteps>
  <connections>
    <transitions>
      <transition>
        <transitionsource type="behavior" index="0" anchor="0"/>
        <transitiontarget type="task" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="behavior" index="1" anchor="0"/>
        <transitiontarget type="task" index="2" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="0" anchor="2"/>
        <transitiontarget type="end" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="2" anchor="2"/>
        <transitiontarget type="decision" index="2" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="6" anchor="3"/>
        <transitiontarget type="decision" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
    </transitions>
    <booleantransitions>
      <booleantransition value="true">
        <transitionsource type="decision" index="0" anchor="3"/>
        <transitiontarget type="decision" index="4" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="0" anchor="2"/>
        <transitiontarget type="end" index="1" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="1" anchor="2"/>
        <transitiontarget type="task" index="1" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="1" anchor="3"/>
        <transitiontarget type="task" index="5" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="2" anchor="3"/>
        <transitiontarget type="decision" index="3" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="2" anchor="2"/>
        <transitiontarget type="task" index="6" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="3" anchor="3"/>
        <transitiontarget type="task" index="3" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="4" anchor="2"/>
        <transitiontarget type="task" index="4" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="4" anchor="3"/>
        <transitiontarget type="decision" index="1" anchor="1"/>
        <bendpoints/>
      </booleantransition>
    </booleantransitions>
  </connections>
</agent>